services:

  postgres:
    image: postgres:14
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 15s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    volumes:
      - "./backend:/backend"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env

  landing:
    image: nenad2807/royaltyx.landing:1.0
    ports:
      - "80:80"
    env_file:
      - .env

  frontend:
    build:
       context: ./frontend
       dockerfile: Dockerfile.local
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    ports:
      - "3000:3000"
    command: npm run start
    env_file:
      - .env

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    command: celery -A royaltyx worker -l info -E
    volumes:
      - ./backend:/backend
    working_dir: /backend
    depends_on:
      - redis
    env_file:
      - .env

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    command: celery -A royaltyx beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/backend
    working_dir: /backend
    depends_on:
      - redis
      - backend
    env_file:
      - .env

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    command: celery -A royaltyx flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/backend
    working_dir: /backend
    depends_on:
      - redis
    env_file:
      - .env


volumes:
  postgres_data:
