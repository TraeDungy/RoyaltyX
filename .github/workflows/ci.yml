name: CI

on:
  push:
    branches: ["**"]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Prepare environment
        run: cp .env.test backend/.env
      - name: Run migrations
        run: |
          cd backend
          python manage.py migrate --noinput
      - name: Run tests
        run: |
          cd backend
          python manage.py test
      - name: Run Ruff
        run: |
          cd backend
          ruff check .
        continue-on-error: true

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      - name: Run ESLint
        working-directory: frontend
        run: npx eslint .
        continue-on-error: true
      - name: Run Prettier check
        working-directory: frontend
        run: npx prettier --check .
        continue-on-error: true
      - name: Run tests
        env:
          CI: true
        working-directory: frontend
        run: npm test -- --watchAll=false --passWithNoTests

