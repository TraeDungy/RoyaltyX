openapi: 3.0.3
info:
  title: RoyaltyX API
  version: 1.0.0
  description: Royalty X
paths:
  /authentication/change-password/:
    post:
      operationId: authentication_change_password_create
      tags:
      - authentication
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /authentication/register/:
    post:
      operationId: authentication_register_create
      tags:
      - authentication
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /authentication/token/:
    post:
      operationId: authentication_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /authentication/token/refresh/:
    post:
      operationId: authentication_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /data_imports/files/:
    get:
      operationId: data_imports_files_list
      tags:
      - data_imports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
          description: ''
    post:
      operationId: data_imports_files_create
      tags:
      - data_imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /data_imports/files/{id}/:
    get:
      operationId: data_imports_files_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - data_imports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    put:
      operationId: data_imports_files_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - data_imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    patch:
      operationId: data_imports_files_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - data_imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    delete:
      operationId: data_imports_files_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - data_imports
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/:
    get:
      operationId: products_retrieve
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: products_create
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /products/{product_id}/:
    get:
      operationId: products_retrieve_2
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: products_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /projects/:
    get:
      operationId: projects_retrieve
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: projects_create
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /projects/info/:
    get:
      operationId: projects_info_retrieve
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /projects/my-projects/:
    get:
      operationId: projects_my_projects_retrieve
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /projects/switch-project/:
    post:
      operationId: projects_switch_project_create
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /projects/update/:
    put:
      operationId: projects_update_update
      tags:
      - projects
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /projects/users/:
    get:
      operationId: projects_users_retrieve
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: projects_users_create
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/:
    get:
      operationId: users_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/get-my-info/:
    get:
      operationId: users_get_my_info_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /payments/create-checkout-session/:
    post:
      operationId: payments_create_checkout_session_create
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /payments/cancel-subscription/:
    post:
      operationId: payments_cancel_subscription_create
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /payments/update-subscription/:
    post:
      operationId: payments_update_subscription_create
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /payments/subscription-status/:
    get:
      operationId: payments_subscription_status_retrieve
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /payments/verify-session/:
    get:
      operationId: payments_verify_session_retrieve
      parameters:
      - in: query
        name: session_id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/:
    get:
      operationId: analytics_retrieve
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/export/:
    get:
      operationId: analytics_export_retrieve
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/forecasts/:
    get:
      operationId: analytics_forecasts_retrieve
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /analytics/{product_id}/:
    get:
      operationId: analytics_retrieve_2
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /sources/:
    get:
      operationId: sources_list
      tags:
      - sources
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: sources_create
      tags:
      - sources
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /sources/{id}/:
    get:
      operationId: sources_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - sources
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: sources_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - sources
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: sources_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - sources
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /sources/{id}/youtube-analytics/:
    get:
      operationId: sources_youtube_analytics_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - sources
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    File:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        file:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 255
        project:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PatchedFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        file:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 255
        project:
          type: integer
          nullable: true
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
